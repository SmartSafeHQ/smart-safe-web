/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  RegisterUpkeep,
  RegisterUpkeepInterface,
} from "../RegisterUpkeep";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "encryptedEmail",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "upkeepContract",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "gasLimit",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "checkData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "offchainConfig",
            type: "bytes",
          },
          {
            internalType: "uint96",
            name: "amount",
            type: "uint96",
          },
        ],
        internalType: "struct IKeeperRegistrar.RegistrationParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "registerAndPredictID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract LinkTokenInterface",
        name: "_linkTokenAddress",
        type: "address",
      },
      {
        internalType: "contract IKeeperRegistrar",
        name: "_registrarContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "UpKeepRegistrationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UpkeepRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "upKeepsPerSmartSafe",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class RegisterUpkeep__factory {
  static readonly abi = _abi;
  static createInterface(): RegisterUpkeepInterface {
    return new Interface(_abi) as RegisterUpkeepInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RegisterUpkeep {
    return new Contract(address, _abi, runner) as unknown as RegisterUpkeep;
  }
}
